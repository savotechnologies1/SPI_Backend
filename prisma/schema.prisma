generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:SHI%402002@82.25.110.131/SPI"
}

model admin {
  id          String       @id @db.Char(36)
  name        String       @db.VarChar(100)
  email       String       @unique(map: "email") @db.VarChar(100)
  password    String       @db.VarChar(255)
  roles       admin_roles? @default(admin)
  phoneNumber String?      @unique(map: "phoneNumber") @db.VarChar(20)
  tokens      Json?
  otp         String?      @db.VarChar(10)
  resetToken  String?      @db.Char(36)
  isDeleted   Boolean?     @default(false)
}

model customers {
  id            String        @id @default(uuid()) @db.Char(36)
  firstName     String
  lastName      String
  email         String
  address       String?
  billingTerms  String?
  createdBy     String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  isDeleted     Boolean       @default(false)
  customerPhone String?
  CustomOrder   CustomOrder[]
  StockOrder    StockOrder[]
}

model employee {
  id             String    @id @default(uuid()) @db.Char(36)
  firstName      String?   @db.VarChar(255)
  lastName       String?   @db.VarChar(255)
  fullName       String?   @db.VarChar(255)
  employeeId     String?   @db.VarChar(255)
  hourlyRate     String?   @db.VarChar(255)
  shift          String?   @db.VarChar(255)
  startDate      String?   @db.VarChar(255)
  pin            String?   @db.VarChar(255)
  shopFloorLogin String?   @db.VarChar(50)
  role           String    @default("shopfloor")
  phoneNumber    String?   @unique(map: "phoneNumber") @db.VarChar(20)
  tokens         Json?
  otp            String?   @db.VarChar(10)
  resetToken     String?   @db.Char(36)
  termsAccepted  Boolean?
  status         String?   @db.VarChar(255)
  createdBy      String?   @db.VarChar(255)
  isDeleted      Boolean?  @default(false)
  createdAt      DateTime? @default(now()) @db.DateTime(0)
  updatedAt      DateTime? @default(now()) @db.DateTime(0)
  email          String?   @unique(map: "email") @db.VarChar(100)
  password       String    @db.VarChar(255)
}

model process {
  id              String            @id @db.VarChar(10)
  processName     String?           @db.VarChar(255)
  machineName     String?           @db.VarChar(255)
  cycleTime       String?           @db.VarChar(255)
  ratePerHour     String?           @db.VarChar(255)
  orderNeeded     Boolean
  createdBy       String?           @db.VarChar(255)
  isDeleted       Boolean?          @default(false)
  createdAt       DateTime?         @default(now()) @db.DateTime(0)
  updatedAt       DateTime?         @default(now()) @db.DateTime(0)
  partFamily      String?           @db.VarChar(255)
  PartNumber      PartNumber[]
  WorkInstruction WorkInstruction[]
}

model suppliers {
  id           String            @id @db.VarChar(10)
  firstName    String?           @db.VarChar(255)
  lastName     String?           @db.VarChar(255)
  email        String?           @db.VarChar(255)
  address      String?           @db.VarChar(255)
  billingTerms String?           @db.VarChar(10)
  createdBy    String?           @db.VarChar(255)
  isDeleted    Boolean?          @default(false)
  createdAt    DateTime?         @default(now()) @db.DateTime(0)
  updatedAt    DateTime?         @default(now()) @db.DateTime(0)
  orders       supplier_orders[]
}

model supplier_orders {
  id           Int        @id @default(autoincrement())
  order_number String?    @db.VarChar(50)
  order_date   String?    @db.VarChar(50)
  supplier_id  String?    @db.VarChar(10)
  part_name    String?    @db.VarChar(255)
  quantity     String?    @db.VarChar(50)
  cost         String?    @db.VarChar(50)
  need_date    String?    @db.VarChar(50)
  createdBy    String?    @db.VarChar(255)
  isDeleted    Boolean?   @default(false)
  createdAt    DateTime?  @default(now()) @db.DateTime(0)
  updatedAt    DateTime?  @default(now()) @db.DateTime(0)
  supplier     suppliers? @relation(fields: [supplier_id], references: [id])

  @@index([supplier_id], map: "supplier_orders_supplier_id_fkey")
}

model users {
  id          String   @id @default(uuid()) @db.Char(36)
  name        String?  @db.VarChar(100)
  email       String?  @unique(map: "email") @db.VarChar(100)
  isDeleted   Boolean? @default(false)
  otp         String?  @db.VarChar(10)
  password    String   @db.VarChar(255)
  phoneNumber String?  @unique(map: "phoneNumber") @db.VarChar(20)
  resetToken  String?  @db.Char(36)
  role        String   @default("shopfloor")
  tokens      Json?
}

model mailTemplate {
  id            String   @id @default(uuid()) @db.Char(36)
  templateEvent String   @unique
  active        Boolean  @default(true)
  subject       String?
  mailVariables String?
  htmlBody      String?  @db.LongText
  textBody      String?  @db.Text
  isDeleted     Boolean  @default(false)
  createdBy     String?  @db.Char(36)
  updatedBy     String?  @db.Char(36)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model StockOrder {
  id                 String    @id @default(uuid()) @db.Char(36)
  orderNumber        String    @unique
  orderDate          String?
  shipDate           String?
  customerId         String
  customerName       String
  customerEmail      String
  customerPhone      String
  productNumber      String
  productDescription String
  cost               String
  totalCost          String
  productQuantity    Int
  createdBy          String?   @db.Char(36)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  isDeleted          Boolean   @default(false)
  customer           customers @relation(fields: [customerId], references: [id])

  @@index([customerId], map: "StockOrder_customerId_fkey")
}

model CustomOrder {
  id                 String    @id @default(uuid()) @db.Char(36)
  orderNumber        String    @unique
  orderDate          String?
  shipDate           String?
  customerId         String
  customerName       String
  customerEmail      String
  customerPhone      String
  productNumber      String
  productDescription String
  cost               String
  productQuantity    Int
  processAssign      Json
  totalTime          String
  createdBy          String?   @db.Char(36)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  isDeleted          Boolean   @default(false)
  customer           customers @relation(fields: [customerId], references: [id])

  @@index([customerId], map: "CustomOrder_customerId_fkey")
}

model PartNumber {
  part_id              String            @id @default(uuid()) @db.Char(36)
  partFamily           String            @db.Char(36)
  partNumber           String            @unique @db.Char(36)
  partDescription      String            @db.VarChar(255)
  cost                 Float
  leadTime             Int
  companyName          String            @db.VarChar(100)
  minStock             Int
  cycleTime            Int?
  processId            String?           @db.VarChar(10)
  processDesc          String?           @db.VarChar(255)
  type                 String            @db.VarChar(100)
  partImg              String?           @db.VarChar(255)
  submittedBy          String?           @db.VarChar(100)
  createdAt            DateTime          @default(now())
  updatedAt            DateTime          @updatedAt
  availStock           Int?
  isDeleted            Boolean           @default(false)
  processOrderRequired Boolean           @default(false)
  supplierOrderQty     Int?
  process              process?          @relation(fields: [processId], references: [id])
  productTree          ProductTree[]
  productUsedIn        ProductTree[]     @relation("ProductRelation")
  WorkInstruction      WorkInstruction[]

  @@index([processId], map: "PartNumber_processId_fkey")
}

model ProductTree {
  id           String     @id @default(uuid()) @db.Char(36)
  product_id   String     @db.Char(36)
  part_id      String     @db.Char(36)
  partQuantity Int
  isDeleted    Boolean    @default(false)
  part         PartNumber @relation(fields: [part_id], references: [part_id])
  product      PartNumber @relation("ProductRelation", fields: [product_id], references: [part_id])

  @@index([part_id])
  @@index([product_id], map: "ProductTree_product_id_fkey")
}

model WorkInstruction {
  id        String     @id @default(uuid()) @db.Char(36)
  processId String     @db.Char(36)
  partId    String     @db.Char(36)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  part      PartNumber @relation(fields: [partId], references: [part_id])
  process   process    @relation(fields: [processId], references: [id])

  @@index([processId])
  @@index([partId])
}

enum admin_roles {
  admin
  superAdmin
}
