generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:SHI%402002@82.25.110.131/SPI"
}

model admin {
  id          String       @id @db.Char(36)
  name        String       @db.VarChar(100)
  email       String       @unique(map: "email") @db.VarChar(100)
  password    String       @db.VarChar(255)
  roles       admin_roles? @default(admin)
  phoneNumber String?      @unique(map: "phoneNumber") @db.VarChar(20)
  tokens      Json?
  otp         String?      @db.VarChar(10)
  resetToken  String?      @db.Char(36)
  isDeleted   Boolean?     @default(false)
}

model customers {
  id            String        @id @default(uuid()) @db.Char(36)
  firstName     String
  lastName      String
  email         String
  address       String?
  customerPhone String?
  billingTerms  String?
  createdBy     String // assuming it's a user ID or name
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  isDeleted     Boolean       @default(false)
  StockOrder    StockOrder[]
  CustomOrder   CustomOrder[]
}

model employee {
  id             String    @id @default(uuid()) @db.Char(36)
  firstName      String?   @db.VarChar(255)
  lastName       String?   @db.VarChar(255)
  fullName       String?   @db.VarChar(255)
  employeeId     String?   @db.VarChar(255)
  hourlyRate     String?   @db.VarChar(255)
  shift          String?   @db.VarChar(255)
  startDate      String?   @db.VarChar(255)
  pin            String?   @db.VarChar(255)
  shopFloorLogin String?   @db.VarChar(50)
  role           String    @default("shopfloor")
  phoneNumber    String?   @unique(map: "phoneNumber") @db.VarChar(20)
  email          String?   @unique(map: "email") @db.VarChar(100)
  password       String    @db.VarChar(255)
  tokens         Json?
  otp            String?   @db.VarChar(10)
  resetToken     String?   @db.Char(36)
  termsAccepted  Boolean?  @db.TinyInt()
  status         String?   @db.VarChar(255)
  createdBy      String?   @db.VarChar(255)
  isDeleted      Boolean?  @default(false)
  createdAt      DateTime? @default(now()) @db.DateTime(0)
  updatedAt      DateTime? @default(now()) @db.DateTime(0)
}

model process {
  id           String    @id @db.VarChar(10)
  processName  String?   @db.VarChar(255)
  partFamily   String?   @db.VarChar(255)
  machineName  String?   @db.VarChar(255)
  cycleTime    String?   @db.VarChar(255)
  ratePerHour  String?   @db.VarChar(255)
  orderNeeded  Boolean
  type         String    @default("") @db.VarChar(50)
  isProcessReq Boolean   @default(false)
  processDesc  String?   @db.VarChar(255)
  createdBy    String?   @db.VarChar(255)
  isDeleted    Boolean?  @default(false)
  createdAt    DateTime? @default(now()) @db.DateTime(0)
  updatedAt    DateTime? @default(now()) @db.DateTime(0)

  PartNumber           PartNumber[]
  WorkInstruction      WorkInstruction[]
  WorkInstructionSteps WorkInstructionSteps[]
}

model suppliers {
  id           String    @id @db.VarChar(10)
  firstName    String?   @db.VarChar(255)
  lastName     String?   @db.VarChar(255)
  email        String?   @db.VarChar(255)
  address      String?   @db.VarChar(255)
  billingTerms String?   @db.VarChar(10)
  createdBy    String?   @db.VarChar(255)
  isDeleted    Boolean?  @default(false)
  createdAt    DateTime? @default(now()) @db.DateTime(0)
  updatedAt    DateTime? @default(now()) @db.DateTime(0)

  orders supplier_orders[]
}

model supplier_orders {
  id           Int        @id @default(autoincrement())
  order_number String?    @db.VarChar(50)
  order_date   String?    @db.VarChar(50)
  supplier_id  String?    @db.VarChar(10)
  supplier     suppliers? @relation(fields: [supplier_id], references: [id])
  part_name    String?    @db.VarChar(255)
  quantity     String?    @db.VarChar(50)
  cost         String?    @db.VarChar(50)
  need_date    String?    @db.VarChar(50)
  createdBy    String?    @db.VarChar(255)
  isDeleted    Boolean?   @default(false)
  createdAt    DateTime?  @default(now()) @db.DateTime(0)
  updatedAt    DateTime?  @default(now()) @db.DateTime(0)
}

model users {
  id          String   @id @default(uuid()) @db.Char(36)
  name        String?  @db.VarChar(100)
  email       String?  @unique(map: "email") @db.VarChar(100)
  password    String   @db.VarChar(255)
  role        String   @default("shopfloor")
  phoneNumber String?  @unique(map: "phoneNumber") @db.VarChar(20)
  tokens      Json?
  otp         String?  @db.VarChar(10)
  resetToken  String?  @db.Char(36)
  isDeleted   Boolean? @default(false)
}

model mailTemplate {
  id            String   @id @default(uuid()) @db.Char(36)
  templateEvent String   @unique
  active        Boolean  @default(true)
  subject       String?
  mailVariables String?
  htmlBody      String?  @db.LongText
  textBody      String?  @db.Text
  isDeleted     Boolean  @default(false)
  createdBy     String?  @db.Char(36)
  updatedBy     String?  @db.Char(36)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum admin_roles {
  admin
  superAdmin
}

model StockOrder {
  id                 String    @id @default(uuid()) @db.Char(36)
  orderNumber        String    @unique
  orderDate          String?
  shipDate           String?
  customerId         String
  customerName       String
  customerEmail      String
  customerPhone      String
  productNumber      String
  productDescription String
  cost               String
  totalCost          String
  productQuantity    Int
  createdBy          String?   @db.Char(36)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  isDeleted          Boolean   @default(false)
  customer           customers @relation(fields: [customerId], references: [id])

  @@index([customerId], map: "StockOrder_customerId_fkey")
}

model CustomOrder {
  id              String          @id @default(uuid()) @db.Char(36)
  orderNumber     String          @unique
  orderDate       DateTime?
  shipDate        DateTime?
  productNumber   String
  partNumber      String
  productQuantity Int
  cost            Decimal         @db.Decimal(10, 2)
  totalCost       Decimal         @db.Decimal(10, 2)
  customerName    String
  customerEmail   String
  customerPhone   String
  customerId      String          @db.Char(36)
  customer        customers       @relation(fields: [customerId], references: [id])
  processDetails  ProcessDetail[]
  isDeleted       Boolean         @default(false)
  createdBy       String?         @db.Char(36)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}

model ProcessDetail {
  id            Int         @id @default(autoincrement())
  process       String
  assignTo      String
  totalTime     Int
  customOrderId String      @db.Char(36)
  customOrder   CustomOrder @relation(fields: [customOrderId], references: [id], onDelete: Cascade)
}

model PartNumber {
  part_id              String   @id @default(uuid()) @db.Char(36)
  partFamily           String   @db.Char(36)
  partNumber           String   @unique @db.Char(36)
  partDescription      String   @db.VarChar(255)
  cost                 Float
  leadTime             Int
  supplierOrderQty     Int?
  cycleTime            Int?
  companyName          String   @db.VarChar(100)
  minStock             Int
  availStock           Int?
  processOrderRequired Boolean  @default(false)
  processId            String?  @db.VarChar(10)
  process              process? @relation(fields: [processId], references: [id])
  processDesc          String?  @db.VarChar(255)
  type                 String   @db.VarChar(100)
  submittedBy          String?  @db.VarChar(100)
  isDeleted            Boolean  @default(false)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  partImages           PartImage[]
  productTree          ProductTree[]
  WorkInstruction      WorkInstruction[]
  productUsedIn        ProductTree[]          @relation("ProductRelation")
  WorkInstructionSteps WorkInstructionSteps[]
  createdBy            String?                @db.Char(36)
}

model PartImage {
  id        String     @id @default(uuid()) @db.Char(36)
  imageUrl  String     @db.VarChar(255)
  part      PartNumber @relation(fields: [partId], references: [part_id])
  partId    String     @db.Char(36)
  type      String     @db.VarChar(100)
  isDeleted Boolean    @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model ProductTree {
  id                  String  @id @default(uuid()) @db.Char(36)
  product_id          String  @db.Char(36)
  part_id             String? @db.Char(36)
  partQuantity        Int
  instructionRequired Boolean @default(false)

  part                 PartNumber?            @relation(fields: [part_id], references: [part_id])
  isDeleted            Boolean                @default(false)
  product              PartNumber             @relation("ProductRelation", fields: [product_id], references: [part_id])
  WorkInstructionSteps WorkInstructionSteps[]
  createdBy            String?                @db.Char(36)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt

  @@index([part_id])
}

model WorkInstruction {
  id               String   @id @default(uuid()) @db.Char(36)
  processId        String   @db.Char(36)
  productId        String   @db.Char(36)
  instructionTitle String?
  isDeleted        Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  process    process    @relation(fields: [processId], references: [id])
  PartNumber PartNumber @relation(fields: [productId], references: [part_id])

  steps            WorkInstructionSteps[]
  InstructionVideo InstructionVideo[]
}

model WorkInstructionSteps {
  id                String  @id @default(uuid()) @db.Char(36)
  workInstructionId String  @db.Char(36)
  part_id           String  @db.Char(36)
  processId         String? @db.VarChar(10)
  productTreeId     String? @db.Char(36)

  stepNumber  Int
  title       String
  instruction String
  isDeleted   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  workInstruction WorkInstruction @relation(fields: [workInstructionId], references: [id])
  part            PartNumber      @relation(fields: [part_id], references: [part_id])
  process         process?        @relation(fields: [processId], references: [id])
  productTree     ProductTree?    @relation(fields: [productTreeId], references: [id])

  images InstructionImage[]
  videos InstructionVideo[]
}

model InstructionImage {
  id        String   @id @default(uuid()) @db.Char(36)
  stepId    String   @db.Char(36)
  imagePath String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  step WorkInstructionSteps @relation(fields: [stepId], references: [id])

  @@index([stepId])
}

model InstructionVideo {
  id        String   @id @default(uuid()) @db.Char(36)
  stepId    String   @db.Char(36)
  videoPath String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  step              WorkInstructionSteps @relation(fields: [stepId], references: [id])
  WorkInstruction   WorkInstruction?     @relation(fields: [workInstructionId], references: [id])
  workInstructionId String?              @db.Char(36)

  @@index([stepId])
}
